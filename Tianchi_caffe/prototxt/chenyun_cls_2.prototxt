layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "pre_prob"
  top: "Python1"
  top: "label"
  python_param {
    module: "data.ClsDataLayer"
    layer: "ClsDataLayer"
    param_str: "{\'phase\': \'train\', \'augument\': True, \'ratio\': 5, \'batch_size\': 16, \'data_root\': \'/home/x/dcsb/Tianchi_caffe/\'}"
  }
}
layer {
  name: "Convolution1"
  type: "Convolution"
  bottom: "data"
  top: "Convolution1"
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    kernel_size: 5
    kernel_size: 5
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm1"
  type: "BatchNorm"
  bottom: "Convolution1"
  top: "BatchNorm1"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale1"
  type: "Scale"
  bottom: "BatchNorm1"
  top: "Scale1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "Scale1"
  top: "ReLU1"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Convolution2"
  type: "Convolution"
  bottom: "ReLU1"
  top: "Convolution2"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 2
    stride: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm2"
  type: "BatchNorm"
  bottom: "Convolution2"
  top: "BatchNorm2"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale2"
  type: "Scale"
  bottom: "BatchNorm2"
  top: "Scale2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "pre_conv"
  type: "ReLU"
  bottom: "Scale2"
  top: "pre_conv"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Convolution3"
  type: "Convolution"
  bottom: "pre_conv"
  top: "Convolution3"
  convolution_param {
    num_output: 128
    pad: 0
    pad: 1
    pad: 1
    kernel_size: 1
    kernel_size: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm3"
  type: "BatchNorm"
  bottom: "Convolution3"
  top: "BatchNorm3"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale3"
  type: "Scale"
  bottom: "BatchNorm3"
  top: "Scale3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU2"
  type: "ReLU"
  bottom: "Scale3"
  top: "ReLU2"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Convolution4"
  type: "Convolution"
  bottom: "ReLU2"
  top: "Convolution4"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm4"
  type: "BatchNorm"
  bottom: "Convolution4"
  top: "BatchNorm4"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale4"
  type: "Scale"
  bottom: "BatchNorm4"
  top: "Scale4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU3"
  type: "ReLU"
  bottom: "Scale4"
  top: "ReLU3"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Eltwise1"
  type: "Eltwise"
  bottom: "pre_conv"
  bottom: "ReLU3"
  top: "Eltwise1"
  eltwise_param {
    operation: SUM
    engine: MKL2017
  }
}
layer {
  name: "ReLU4"
  type: "ReLU"
  bottom: "Eltwise1"
  top: "ReLU4"
}
layer {
  name: "Convolution5"
  type: "Convolution"
  bottom: "ReLU4"
  top: "Convolution5"
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm5"
  type: "BatchNorm"
  bottom: "Convolution5"
  top: "BatchNorm5"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale5"
  type: "Scale"
  bottom: "BatchNorm5"
  top: "Scale5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU5"
  type: "ReLU"
  bottom: "Scale5"
  top: "ReLU5"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Convolution6"
  type: "Convolution"
  bottom: "ReLU5"
  top: "Convolution6"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm6"
  type: "BatchNorm"
  bottom: "Convolution6"
  top: "BatchNorm6"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale6"
  type: "Scale"
  bottom: "BatchNorm6"
  top: "Scale6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU6"
  type: "ReLU"
  bottom: "Scale6"
  top: "ReLU6"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Eltwise2"
  type: "Eltwise"
  bottom: "ReLU4"
  bottom: "ReLU6"
  top: "Eltwise2"
  eltwise_param {
    operation: SUM
    engine: MKL2017
  }
}
layer {
  name: "res2"
  type: "ReLU"
  bottom: "Eltwise2"
  top: "res2"
}
layer {
  name: "Convolution7"
  type: "Convolution"
  bottom: "res2"
  top: "Convolution7"
  convolution_param {
    num_output: 128
    pad: 0
    pad: 0
    pad: 0
    kernel_size: 2
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm7"
  type: "BatchNorm"
  bottom: "Convolution7"
  top: "BatchNorm7"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale7"
  type: "Scale"
  bottom: "BatchNorm7"
  top: "Scale7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU7"
  type: "ReLU"
  bottom: "Scale7"
  top: "ReLU7"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "Convolution8"
  type: "Convolution"
  bottom: "ReLU7"
  top: "Convolution8"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    kernel_size: 5
    kernel_size: 5
    stride: 1
    stride: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BatchNorm8"
  type: "BatchNorm"
  bottom: "Convolution8"
  top: "BatchNorm8"
  batch_norm_param {
    engine: MKL2017
  }
}
layer {
  name: "Scale8"
  type: "Scale"
  bottom: "BatchNorm8"
  top: "Scale8"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv"
  type: "ReLU"
  bottom: "Scale8"
  top: "conv"
  relu_param {
    engine: MKL2017
  }
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv"
  top: "pool"
  pooling_param {
    pool: MAX
    pad: 0
    kernel_size: 6
    kernel_size: 3
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "cls"
  type: "InnerProduct"
  bottom: "pool"
  top: "cls"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "cls"
  top: "prob"
}
layer {
  name: "bprob"
  type: "Eltwise"
  bottom: "prob"
  bottom: "pre_prob"
  top: "bprob"
  eltwise_param {
    operation: SUM
    coeff: 0.5
    engine: MKL2017
  }
}
layer {
  name: "loss"
  type: "MultinomialLogisticLoss"
  bottom: "bprob"
  bottom: "label"
  top: "loss"
}
